{"version":3,"sources":["ecs/types/Vector2.ts","ecs/components/Circle.ts","ecs/components/Selectable.ts","ecs/components/RectangleSelection.ts","ecs/utils/positionsAreClose.ts","ecs/systems/Renderer.ts","ecs/systems/Selector.ts","ecs/components/Moveable.ts","ecs/systems/Mover.ts","ecs/systems/Stopper.ts","ecs/systems/RectangleSelector.ts","ecs/Game.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["Vector2","x","y","this","source","Vector2Type","createType","name","default","copy","copyCopyable","clone","cloneClonable","Circle","color","radius","position","Component","schema","type","Types","String","Number","Selectable","selected","Boolean","RectangleSelection","startPosition","endPosition","positionsAreClose","a","b","threshold","dX","dY","Math","sqrt","Renderer","world","canvas","colors","priority","ctx","clear","fillStyle","background","fillRect","width","height","drawCircle","entity","getComponent","beginPath","arc","PI","fill","lineWidth","strokeStyle","stroke","selection","drawRectangleSelection","w","h","strokeRect","getContext","delta","time","queries","circles","results","forEach","rectangleSelections","System","components","Selector","onMouseDown","e","button","clickPosition","clientX","clientY","selectCircles","anySelected","getMutableComponent","deselectAllCircles","_delta","_time","Moveable","hasDestination","destination","speed","Mover","moveable","set","selectables","filter","withDestination","moveables","vector","unitVector","r","mX","mY","Stopper","stopIfColliding","otherEntity","other","RectangleSelector","createEntity","addComponent","onMouseMove","onMouseUp","remove","circleEntity","selectable","withinX","withinY","friendly","enemy","projectile","Game","lastTime","animationFrameRequest","start","i","createFriendly","run","stop","cancelAnimationFrame","mover","getSystem","selector","rectangleSelector","performance","now","execute","requestAnimationFrame","World","registerSystem","registerComponent","App","React","useState","setCanvas","gameRef","useRef","useEffect","current","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener","className","ref","preventDefault","stopPropagation","onContextMenu","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","unregister","navigator","serviceWorker","ready","then","registration","catch","error","console","message"],"mappings":"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","file":"static/js/main.cab2fdd2.chunk.js","sourcesContent":["import { createType, copyCopyable, cloneClonable } from \"ecsy\";\n\nclass Vector2 {\n  x: number;\n  y: number;\n\n  constructor(x: number = 0, y: number = 0) {\n    this.x = x;\n    this.y = y;\n  }\n\n  set(x: number, y: number) {\n    this.x = x;\n    this.y = y;\n    return this;\n  }\n\n  copy(source: Vector2) {\n    this.x = source.x;\n    this.y = source.y;\n    return this;\n  }\n\n  clone() {\n    return new Vector2(this.x, this.y)\n  }\n}\n\nexport default Vector2\n\nexport const Vector2Type = createType({\n  name: \"Vector2\",\n  default: new Vector2(),\n  copy: copyCopyable,\n  clone: cloneClonable\n});","import { Component, Types } from \"ecsy\";\nimport Vector2, { Vector2Type } from \"../types/Vector2\";\n\nclass Circle extends Component<Circle> {\n  color: string = '#000000';\n  radius: number = 0\n  position: Vector2 = new Vector2()\n}\n\nCircle.schema = {\n  color: {type: Types.String},\n  radius: { type: Types.Number }, \n  position: { type: Vector2Type },\n}\n\nexport default Circle","import { Component, Types } from \"ecsy\";\n\nclass Selectable extends Component<Selectable> {\n  selected: boolean = false\n}\n\nSelectable.schema = {\n  selected: { type: Types.Boolean },\n}\n\nexport default Selectable","import { Component } from \"ecsy\";\nimport Vector2, { Vector2Type } from \"../types/Vector2\";\n\nclass RectangleSelection extends Component<RectangleSelection>{\n  startPosition: Vector2 = new Vector2()\n  endPosition: Vector2 = new Vector2()\n}\n\nRectangleSelection.schema = {\n  startPosition: { type: Vector2Type },\n  endPosition: { type: Vector2Type },\n}\n\nexport default RectangleSelection","\ninterface Position {\n  x: number;\n  y: number;\n}\n\nconst positionsAreClose = (a: Position, b: Position, threshold: number) => {\n  const dX = a.x - b.x\n  const dY = a.y - b.y\n  const distance = Math.sqrt( (dX*dX) + (dY*dY) )\n\n  return distance <= threshold\n}\n\nexport default positionsAreClose","import { System, World, Entity } from \"ecsy\";\nimport Circle from \"../components/Circle\";\nimport Selectable from \"../components/Selectable\";\nimport RectangleSelection from \"../components/RectangleSelection\";\nimport positionsAreClose from \"../utils/positionsAreClose\";\n\ninterface Colors {\n  background: string;\n  selection: string;\n}\n\ninterface Attributes {\n  priority?: number;\n  canvas: HTMLCanvasElement;\n  colors: Colors\n}\n\nclass Renderer extends System {\n  private canvas: HTMLCanvasElement;\n  private colors: Colors;\n  private ctx: CanvasRenderingContext2D | null;\n\n  constructor(world: World, { canvas, colors, priority }: Attributes) {\n    super(world, { priority })\n    this.canvas = canvas\n    this.colors = colors\n    this.ctx = this.canvas.getContext('2d')\n  }\n\n  execute(delta: number, time: number): void {\n    this.clear()\n    this.queries.circles.results.forEach(this.drawCircle)\n    this.queries.rectangleSelections.results.forEach(this.drawRectangleSelection)\n  }\n\n  private clear = () => {\n    if (!this.ctx) return;\n\n    this.ctx.fillStyle = this.colors.background\n    this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n  }\n\n  private drawCircle = (entity: Entity) => {\n    if (!this.ctx) return\n\n    const ctx = this.ctx\n    const { color, radius, position } = entity.getComponent(Circle)\n    const { selected } = entity.getComponent(Selectable)\n    const { x, y } = position\n\n    ctx.fillStyle = color\n    ctx.beginPath()\n    ctx.arc(x, y, radius, 0, 2 * Math.PI, false)\n    ctx.fill()\n    ctx.lineWidth = 2\n    ctx.strokeStyle = '#222'\n    ctx.stroke()    \n\n    if (selected) {\n      ctx.beginPath()\n      ctx.arc(x, y, radius + 2, 0, 2 * Math.PI, false)\n      ctx.lineWidth = 1\n      ctx.strokeStyle = this.colors.selection\n      ctx.stroke()    \n    }\n  }\n\n  private drawRectangleSelection = (entity: Entity) => {\n    if (!this.ctx) return;\n\n    const ctx = this.ctx\n    const { startPosition, endPosition } = entity.getComponent(RectangleSelection)\n\n    if (positionsAreClose(startPosition, endPosition, 5)) return;\n\n    const { x, y } = startPosition\n    const w = endPosition.x - x\n    const h = endPosition.y - y\n\n    ctx.lineWidth = 1\n    ctx.strokeStyle = this.colors.selection;\n    ctx.strokeRect(x, y, w, h)\n  }\n}\n\nRenderer.queries = {\n  circles: { components: [Circle, Selectable] },\n  rectangleSelections: { components: [RectangleSelection] },\n}\n\nexport default Renderer","import { System } from \"ecsy\";\nimport Circle from \"../components/Circle\";\nimport Selectable from \"../components/Selectable\";\nimport positionsAreClose from \"../utils/positionsAreClose\";\n\nclass Selector extends System {\n  execute(_delta: number, _time: number): void {}\n\n  onMouseDown = (e: React.MouseEvent<HTMLCanvasElement, MouseEvent>) => {\n    if (e.button !== 0) return;\n\n    const clickPosition = { x: e.clientX, y: e.clientY }\n    this.selectCircles(clickPosition)\n  };\n\n  selectCircles = (clickPosition: { x: number, y: number }) => {\n    let anySelected = false\n\n    this.queries.circles.results.forEach(entity => {\n      const { position, radius } = entity.getComponent(Circle)\n\n      if (positionsAreClose(clickPosition, position, radius)) {\n        entity.getMutableComponent(Selectable).selected = true\n        anySelected = true\n      }\n    })\n\n    if (!anySelected) this.deselectAllCircles();\n  }\n\n  private deselectAllCircles = () => {\n    this.queries.circles.results.forEach(entity => {\n      if (!entity.getComponent(Selectable).selected) return\n\n      entity.getMutableComponent(Selectable).selected = false\n    })\n  }\n}\n\nSelector.queries = {\n  circles: { components: [Selectable, Circle] }\n}\n\nexport default Selector","import { Component, Types } from \"ecsy\";\nimport Vector2, { Vector2Type } from \"../types/Vector2\";\n\n\nclass Moveable extends Component<Moveable> {\n  hasDestination = false\n  destination: Vector2 = new Vector2()\n  speed = 100\n}\n\nMoveable.schema = {\n  hasDestination: { type: Types.Boolean },\n  destination: { type: Vector2Type, },\n  speed: { type: Types.Number, },\n}\n\nexport default Moveable","import { System } from \"ecsy\";\nimport Moveable from \"../components/Moveable\";\nimport Circle from \"../components/Circle\";\nimport Selectable from \"../components/Selectable\";\nimport positionsAreClose from \"../utils/positionsAreClose\";\n\nconst unitVector = ({ x, y }: { x: number, y: number }) => {\n  const r = Math.sqrt(x*x + y*y)\n\n  return {\n    x: x / r,\n    y: y / r,\n  }\n}\n\nclass Mover extends System {\n  execute(delta: number, _time: number): void {\n    this.withDestination().forEach(entity => {\n      const { position } = entity.getMutableComponent(Circle)\n      const { destination, speed } = entity.getComponent(Moveable)\n\n      const vector = unitVector({\n        x: destination.x - position.x,\n        y: destination.y - position.y,\n      })\n\n      const mX = vector.x * (delta * speed / 1000)\n      const mY = vector.y * (delta * speed / 1000)\n\n      position.x += mX\n      position.y += mY\n\n      if (positionsAreClose(position, destination, 1)) {\n        entity.getMutableComponent(Moveable).hasDestination = false\n      }\n    })\n  }\n\n  onMouseDown = (e: React.MouseEvent<HTMLCanvasElement, MouseEvent>) => {\n    if (e.button !== 2) return;\n\n    const {clientX, clientY} = e\n\n    this.selected().forEach(entity => {\n      const moveable = entity.getMutableComponent(Moveable)\n      moveable.hasDestination = true\n      moveable.destination.set(clientX, clientY)\n    });\n  }\n\n  selected = () => {\n    return this.queries.selectables.results.filter(entity => {\n      return entity.getComponent(Selectable).selected\n    })\n  }\n\n  withDestination = () => {\n    return this.queries.moveables.results.filter(entity => {\n      return entity.getComponent(Moveable).hasDestination\n    })\n  }\n}\n\nMover.queries = {\n  moveables: { components: [ Moveable, Circle ] },\n  selectables: { components: [ Moveable, Selectable ] },\n}\n\nexport default Mover","import { System, Entity } from \"ecsy\";\nimport Moveable from \"../components/Moveable\";\nimport Circle from \"../components/Circle\";\nimport positionsAreClose from \"../utils/positionsAreClose\";\n\nclass Stopper extends System {\n  execute(_delta: number, _time: number): void {\n    this.queries.moveables.results.forEach(this.stopIfColliding)\n  }\n\n  private stopIfColliding = (entity: Entity) => {\n    const { radius, position } = entity.getComponent(Circle)\n\n    this.queries.moveables.results.forEach(otherEntity => {\n      if (entity === otherEntity) return;\n\n      const other = otherEntity.getComponent(Circle)\n      const threshold = radius + other.radius\n\n      if (positionsAreClose(position, other.position, threshold)) {\n        entity.getMutableComponent(Moveable).hasDestination = false\n      }\n    })\n  }\n}\n\nStopper.queries = {\n  moveables: { components: [ Moveable, Circle ] },\n}\n\nexport default Stopper","import { System } from \"ecsy\";\nimport Selectable from \"../components/Selectable\";\nimport Circle from \"../components/Circle\";\nimport Vector2 from \"../types/Vector2\";\nimport RectangleSelection from \"../components/RectangleSelection\";\nimport positionsAreClose from \"../utils/positionsAreClose\";\n\nclass RectangleSelector extends System {\n  execute(_delta: number, _time: number): void { }\n\n  onMouseDown = (e: React.MouseEvent<HTMLCanvasElement, MouseEvent>) => {\n    if (e.button !== 0) return;\n\n    const startPosition = new Vector2(e.clientX, e.clientY)\n    const endPosition = new Vector2(e.clientX, e.clientY)\n\n    this.world.createEntity()\n      .addComponent(RectangleSelection, { startPosition, endPosition })\n  }\n\n  onMouseMove = (e: React.MouseEvent<HTMLCanvasElement, MouseEvent>) => {\n    const { clientX, clientY } = e\n\n    this.queries.rectangleSelections.results.forEach(entity => {\n      const { endPosition } = entity.getComponent(RectangleSelection)\n\n      if (clientX === endPosition.x || clientY === endPosition.y) {\n        return;\n      }\n\n      entity.getMutableComponent(RectangleSelection).endPosition.set(clientX, clientY)\n    })\n  }\n\n  onMouseUp = (e: React.MouseEvent<HTMLCanvasElement, MouseEvent>) => {\n    if (e.button !== 0) return;\n\n    this.queries.rectangleSelections.results.forEach(entity => {\n      const { startPosition, endPosition } = entity.getComponent(RectangleSelection)\n      entity.remove();\n      if (positionsAreClose(startPosition, endPosition, 5)) return;\n\n      this.queries.circles.results.forEach(circleEntity => {\n        const selectable = circleEntity.getMutableComponent(Selectable)\n        const { position } = circleEntity.getComponent(Circle);\n        const { x, y } = position\n\n        const withinX = (startPosition.x < x && x < endPosition.x)\n                    || (endPosition.x < x && x < startPosition.x)\n\n        const withinY = (startPosition.y < y && y < endPosition.y)\n                    || (endPosition.y < y && y < startPosition.y)\n\n        selectable.selected = (withinX && withinY)\n      })\n    })\n  }\n}\n\nRectangleSelector.queries = {\n  circles: { components: [Selectable, Circle] },\n  rectangleSelections: { components: [RectangleSelection] },\n}\n\nexport default RectangleSelector","import { World } from 'ecsy'\nimport Circle from './components/Circle'\nimport Renderer from './systems/Renderer'\nimport Selectable from './components/Selectable'\nimport Selector from './systems/Selector'\nimport Mover from './systems/Mover'\nimport Moveable from './components/Moveable'\nimport Stopper from './systems/Stopper'\nimport Vector2 from './types/Vector2'\nimport RectangleSelection from './components/RectangleSelection'\nimport RectangleSelector from './systems/RectangleSelector'\n\nconst colors = {\n  friendly: '#59cd90',\n  enemy: '#c73e1d',\n  projectile: '#ffe74c',\n  background: '#545e75',\n  selection: '#57b8ff',\n}\n\nclass Game {\n  private world: World\n  private canvas: HTMLCanvasElement\n  private lastTime: number\n  private animationFrameRequest: number | null\n\n  constructor({canvas}: {canvas: HTMLCanvasElement}) {\n    this.canvas = canvas\n    this.lastTime = performance.now()\n    this.animationFrameRequest = null\n    this.world = new World()\n      .registerSystem(Renderer, { canvas, colors })\n      .registerSystem(Selector)\n      .registerSystem(RectangleSelector)\n      .registerSystem(Mover)\n      .registerSystem(Stopper)\n      .registerComponent(Circle)\n      .registerComponent(Selectable)\n      .registerComponent(Moveable)\n      .registerComponent(RectangleSelection)\n  }\n\n  start = () => {\n    for (let i = 0; i < 10; i++) {\n      this.createFriendly(50 * i, 50 * i)\n    }\n    this.run();\n  }\n\n  createFriendly = (x: number, y: number) => {\n      this.world.createEntity()\n        .addComponent(Circle, { radius: 10, color: colors.friendly, position: new Vector2(x, y) })\n        .addComponent(Selectable)\n        .addComponent(Moveable)\n  }\n\n  stop = () => {\n    if (!this.animationFrameRequest) return\n\n    cancelAnimationFrame(this.animationFrameRequest)\n  }\n\n  onMouseDown = (e: React.MouseEvent<HTMLCanvasElement, MouseEvent>) => {\n    const mover = this.world.getSystem(Mover) as Mover\n    const selector = this.world.getSystem(Selector) as Selector\n    const rectangleSelector = this.world.getSystem(RectangleSelector) as RectangleSelector\n\n    mover.onMouseDown(e)\n    selector.onMouseDown(e)\n    rectangleSelector.onMouseDown(e)\n  }\n\n  onMouseMove = (e: React.MouseEvent<HTMLCanvasElement, MouseEvent>) => {\n    const rectangleSelector = this.world.getSystem(RectangleSelector) as RectangleSelector\n    rectangleSelector.onMouseMove(e)\n  }\n\n  onMouseUp = (e: React.MouseEvent<HTMLCanvasElement, MouseEvent>) => {\n    const rectangleSelector = this.world.getSystem(RectangleSelector) as RectangleSelector\n    rectangleSelector.onMouseUp(e)\n  }\n\n  private run =  () => {\n     // Compute delta and elapsed time\n     const time = performance.now()\n     const delta = time - this.lastTime\n\n     // Run all the systems\n     this.world.execute(delta, time)\n\n     this.lastTime = time\n     this.animationFrameRequest = requestAnimationFrame(this.run)\n  }\n}\n\nexport default Game","import React, { MouseEventHandler } from 'react';\n\nimport Game from './ecs/Game'\nimport './App.css';\n\nconst App = () => {\n  const [canvas, setCanvas] = React.useState<HTMLCanvasElement | null>(null);\n  const gameRef = React.useRef<Game | null>(null)\n\n  React.useEffect(() => {\n    if (!canvas) return;\n\n    gameRef.current = new Game({canvas})\n    gameRef.current.start()\n\n    return () => {\n      gameRef.current?.stop()\n      gameRef.current = null\n    }\n  }, [canvas])\n\n  React.useEffect(() => {\n    const handleResize = () => {\n      if (!canvas) return\n\n      canvas.width = window.innerWidth\n      canvas.height = window.innerHeight\n    }\n\n    handleResize()\n    window.addEventListener('resize', handleResize)\n    return () => window.removeEventListener('resize', handleResize)\n  }, [canvas])\n\n  const onMouseDown: MouseEventHandler<HTMLCanvasElement> = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    gameRef.current?.onMouseDown(e)\n  }\n\n  const onMouseMove: MouseEventHandler<HTMLCanvasElement> = (e) => {\n    gameRef.current?.onMouseMove(e)\n  }\n\n  const onMouseUp: MouseEventHandler<HTMLCanvasElement> = (e) => {\n    gameRef.current?.onMouseUp(e)\n  }\n\n  return (\n    <div className=\"App\">\n      <canvas \n        ref={setCanvas} \n        onMouseDown={onMouseDown} \n        onMouseMove={onMouseMove}\n        onMouseUp={onMouseUp}\n        onContextMenu={e => e.preventDefault()} />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}